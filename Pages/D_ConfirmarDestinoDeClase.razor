@using Generador_ABM.Data;
@using Generador_ABM;
@inject ISnackbar Snackbar

   @* Para produccion @if (ListaDeAtributos.Count() == 0)*@

   @*Para Test*@
    @if (ListaDeAtributosTest.Count() == 0)
    {
    <MudDialog>
            <DialogContent>
                <MudText Typo="Typo.subtitle1">No hay atributos para generar el archivo</MudText>
            </DialogContent>

            <DialogActions>
            <MudButton Variant="Variant.Outlined" OnClick="Cancel" Color="Color.Primary">Cancel</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Submit">Aceptar</MudButton>
            </DialogActions>
    </MudDialog>
}
    else
    {
    <MudDialog>
        <DialogContent>
            <MudText Typo="Typo.subtitle1">Esta seguro que desea crear el archivo de clase @NombreClase</MudText>
           
        </DialogContent>

        <DialogActions>
            <MudButton Variant="Variant.Outlined" OnClick="Cancel" Color="Color.Primary">Cancel</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="ProcesoDeClase">Crear</MudButton>
        </DialogActions>
    </MudDialog>
    }

@*<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.subtitle1">No hay atributos para generar el archivo</MudText>
        @foreach (var item in ListaDeAtributos)
        {
            <MudText>@item.NombreAtributo.ToString();</MudText>
            <MudText>@item.TipoDato.ToString();</MudText>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>*@



@code {
    // Dialog y parametros necesarios para ejecutar procedimientos
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    // Recibo la lista para usarla si lo deseo en el Dialog

    // Para produccion
    //[Parameter] public List<Clase> ListaDeAtributos { get; set; }

    //Para test
    //[Parameter] public List<Clase> ListaDeAtributos { get; set; }
    [Parameter] public List<Clase> ListaDeAtributosTest { get; set; }
    [Parameter] public String NameSpace { get; set; }
    [Parameter] public String NombreClase { get; set; }
    [Parameter] public String Ruta{ get; set; }
    [Parameter] public String NombreInterface { get; set; }
    [Parameter] public Boolean SqlBase { get; set; }
    [Parameter] public Boolean SqlInsert { get; set; }
    [Parameter] public Boolean SqlUpdate { get; set; }
    [Parameter] public Boolean SqlDelete { get; set; }
    [Parameter] public Boolean SqlToString { get; set; }


    //sring Ruta1 = "C:\\Users\\usuario\\Documents\\Luis\\Archivos csv de pruebas";
    public void ProcesoDeClase()
    {
        //Método para crear archivo desde Clase Manejo de Archivo
        try
        {
            //modificar la lista de ListaDeAtributosTest  a  ListaDeAtributos
            ManejoDeArchivo.CrearArchivoDeClase(ListaDeAtributosTest, NameSpace, NombreClase, Ruta, NombreInterface, SqlBase, SqlInsert, SqlUpdate, SqlDelete, SqlToString);
            MudDialog.Close(DialogResult.Ok(true));

        }
        catch (Exception e)
        {
            Snackbar.Add("No se pudo realizar la accion " + e.Message, Severity.Error);            
        }
    }

        
    void Submit() => MudDialog.Close(DialogResult.Ok(true));

    void Cancel() => MudDialog.Cancel();
}

